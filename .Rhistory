#Creating a series of graphs to test for homoscedasticity.
par(mfrow=c(2,2))
plot(lmMod)
scatter.smooth(x=Salaries1$Avg.Salary.K., y=Salaries1$Age, main="Age of Company by Average Salary", col="blue", lcol="green")
scatter.smooth(x=Salaries1$Avg.Salary.K., y=Salaries1$Age, main="Age of Company by Average Salary", col="blue")
scatter.smooth(x=Salaries1$Avg.Salary.K., y=Salaries1$Age, main="Age of Company by Average Salary", col="blue")
scatter.smooth(x=Salaries1$Avg.Salary.K., y=Salaries1$Age, main="Age of Company by Average Salary")
View (Salaries)
colnames(Salaries)
df <- c("Avg.Salary.K.","Age")
Salaries1 <- Salaries[df]
View (Salaries1)
scatter.smooth(x=Salaries1$Avg.Salary.K., y=Salaries1$Age, main="Age of Company by Average Salary")
library(dplyr)
library(readxl)
library(ggplot2)
install.packages('treemap')
library(treemap)
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Type.of.ownership"), vSize="Avg.Salary.K.", type="index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Lower.Salary", type = "index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Upper.Salary", type = "index")
library(dplyr)
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Information Technology'] <- "1"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Biotech & Pharmaceuticals'] <- "2"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Business Services']<- "3"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Insurance'] <- "4"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Health Care'] <- "5"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Finance'] <- "6"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Manufacturing'] <- "7"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Aerospace & Defense'] <- "8"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Education'] <- "9"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Retail'] <- "10"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Oil, Gas, Energy & Utilities'] <- "11"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Government'] <- "12"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='-1'] <- "13"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Non-Profit'] <- "14"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Transportation & Logistics'] <- "15"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Real Estate'] <- "16"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Travel & Tourism'] <- "17"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Telecommunications'] <- "18"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Media'] <- "19"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Arts, Entertainment & Recreation'] <- "20"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Consumer'] <- "21"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Mining & Metals'] <- "22"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Construction, Repair & Maintenance'] <- "23"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Agriculture & Forestry'] <- "24"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Accounting & Legal'] <- "25"
library("caret")
library("magrittr")
library("dplyr")
library("tidyr")
library("lmtest")
library("popbio")
library("e1071")
salarieslogit <- glm(as.factor(NewSector) ~ Python, data = Data.Fram.in.Excel.Data.Science.Salaries.2021, family = "binomial")
probabilities <- predict(salarieslogit, type = "response")
install.packages("qpcR")
install.packages("qpcR")
library("qpcR")
bindSalaries <- qpcR:::cbind.na(Data.Fram.in.Excel.Data.Science.Salaries.2021, probabilities)
bindSalaries
FitAll= lm(NewSector ~ Python + spark + aws + excel + sql + sas + keras + pytorch + scikit + tensor + hadoop + tableau + bi + flink + mongo + google_an, data = bindSalaries)
summary(FitAll)
step(FitAll, direction = 'backward')
fitSome = lm(NewSector ~ spark + aws + tensor + bi + mongo + google_an, data = bindSalaries)
summary(fitSome)
library('rcompanion')
library('car')
library('effects')
library('multcomp')
library('IDPmisc')
library('dplyr')
library('psych')
keeps <- c("Python", "spark", "aws", "sas", "keras", "scikit", "flink", "mongo", "excel", "sql", "pytorch", "tensor", "hadoop", "tableau", "bi", "google_an", "Location", "Sector")
dataKeep = Data.Fram.in.Excel.Data.Science.Salaries.2021[keeps]
dataKeep2 <- head(dataKeep, 25)
dataKeep2$Location <- as.integer(as.factor(dataKeep2$Location))
dataKeep2$Sector <- as.integer(as.factor(dataKeep2$Sector))
plotNormalHistogram(dataKeep2$Location)
dataLocation.plot <- sqrt(dataKeep2$Location)
plotNormalHistogram(dataLocation.plot)
plotNormalHistogram((dataKeep2$Sector))
str(dataKeep2$Location)
dataKeep2$Location <- as.factor(dataKeep2$Location)
str(dataKeep2$Location)
str(dataKeep2$Sector)
dataKeep2$Sector <- as.factor(dataKeep2$Sector)
str(dataKeep2$Sector)
str(dataKeep2$Python)
dataKeep2$Python <- as.factor(dataKeep2$Python)
str(dataKeep2$Python)
leveneTest(dataLocation.plot ~ Sector, data = dataKeep2)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp = lm(dataLocation.plot ~ Python, data = dataKeep2)
anova(Homogeneity_RegrSlp)
#RUNNING THE ANCOVA ANALYSIS
ANCOVA = lm(dataLocation.plot ~ Python + Sector*Python, data = dataKeep2)
anova(ANCOVA)
#Final Project Analysis- Data Scientist Salaries
install.packages("car")
install.packages("car")
#Loading Libraries
library("car")
library("caret")
library("gvlma")
library("predictmeans")
library("e1071")
library("lmtest")
View (Salaries)
keepsP2 <- c("spark", "aws", "tensor","bi", "mongo", "google_an", "Location", "Sector")
dataKeep2 = Data.Fram.in.Excel.Data.Science.Salaries.2021[keepsP2]
dataKeepA <- head(dataKeep2, 25)
dataKeepA$Location <- as.integer(as.factor(dataKeepA$Location))
dataKeepA$Sector <- as.integer(as.factor(dataKeepA$Sector))
plotNormalHistogram(dataKeepA$Location)
dataLocation.plot <- sqrt(dataKeepA$Location)
plotNormalHistogram(dataLocation.plot)
keepsP2 <- c("spark", "aws", "tensor","bi", "mongo", "google_an", "Location", "Sector")
dataKeep2 = Data.Fram.in.Excel.Data.Science.Salaries.2021[keepsP2]
dataKeepA <- head(dataKeep2, 25)
dataKeepA$Location <- as.integer(as.factor(dataKeepA$Location))
dataKeepA$Sector <- as.integer(as.factor(dataKeepA$Sector))
plotNormalHistogram(dataKeepA$Location)
plotNormalHistogram(dataKeepA$Location)
dataLocation2.plot <- sqrt(dataKeepA$Location)
plotNormalHistogram(dataLocation2.plot)
plotNormalHistogram((dataKeepA$Sector))
str(dataKeepA$Location)
dataKeepA$Location <- as.factor(dataKeepA$Location)
str(dataKeepA$Location)
str(dataKeepA$Sector)
dataKeepA$Sector <- as.factor(dataKeepA$Sector)
str(dataKeepA$Sector)
str(dataKeepA$Python)
dataKeepA$Python <- as.factor(dataKeepA$Python)
str(dataKeepA$Python)
leveneTest(dataLocation2.plot ~ Sector, data = dataKeepA)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp1 = lm(dataLocation2.plot ~ Python, data = dataKeepA)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp1 = lm(dataLocation1.plot ~ Python, data = dataKeepA)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp1 = lm(dataLocation2.plot ~ Python, data = dataKeepA)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp1 = lm(dataLocation2.plot ~ spark, data = dataKeepA)
anova(Homogeneity_RegrSlp1)
#RUNNING THE ANCOVA ANALYSIS
ANCOVA = lm(dataLocation2.plot ~ Python + Sector*spark, data = dataKeepA)
#RUNNING THE ANCOVA ANALYSIS
ANCOVA = lm(dataLocation2.plot ~ aws + Sector*spark, data = dataKeepA)
anova(ANCOVA)
library(dplyr)
library(readxl)
library(ggplot2)
install.packages('treemap')
library(treemap)
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Type.of.ownership"), vSize="Avg.Salary.K.", type="index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Lower.Salary", type = "index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Upper.Salary", type = "index")
library(dplyr)
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Information Technology'] <- "1"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Biotech & Pharmaceuticals'] <- "2"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Business Services']<- "3"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Insurance'] <- "4"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Health Care'] <- "5"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Finance'] <- "6"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Manufacturing'] <- "7"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Aerospace & Defense'] <- "8"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Education'] <- "9"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Retail'] <- "10"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Oil, Gas, Energy & Utilities'] <- "11"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Government'] <- "12"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='-1'] <- "13"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Non-Profit'] <- "14"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Transportation & Logistics'] <- "15"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Real Estate'] <- "16"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Travel & Tourism'] <- "17"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Telecommunications'] <- "18"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Media'] <- "19"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Arts, Entertainment & Recreation'] <- "20"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Consumer'] <- "21"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Mining & Metals'] <- "22"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Construction, Repair & Maintenance'] <- "23"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Agriculture & Forestry'] <- "24"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Accounting & Legal'] <- "25"
library("caret")
library("magrittr")
library("dplyr")
library("tidyr")
library("lmtest")
library("popbio")
library("e1071")
salarieslogit <- glm(as.factor(NewSector) ~ Python, data = Data.Fram.in.Excel.Data.Science.Salaries.2021, family = "binomial")
probabilities <- predict(salarieslogit, type = "response")
install.packages("qpcR")
install.packages("qpcR")
library("qpcR")
bindSalaries <- qpcR:::cbind.na(Data.Fram.in.Excel.Data.Science.Salaries.2021, probabilities)
bindSalaries
FitAll= lm(NewSector ~ Python + spark + aws + excel + sql + sas + keras + pytorch + scikit + tensor + hadoop + tableau + bi + flink + mongo + google_an, data = bindSalaries)
summary(FitAll)
step(FitAll, direction = 'backward')
fitSome = lm(NewSector ~ spark + aws + tensor + bi + mongo + google_an, data = bindSalaries)
summary(fitSome)
library('rcompanion')
library('car')
library('effects')
library('multcomp')
library('IDPmisc')
library('dplyr')
library('psych')
keeps <- c("Python", "spark", "aws", "sas", "keras", "scikit", "flink", "mongo", "excel", "sql", "pytorch", "tensor", "hadoop", "tableau", "bi", "google_an", "Location", "Sector")
dataKeep = Data.Fram.in.Excel.Data.Science.Salaries.2021[keeps]
dataKeep2 <- head(dataKeep, 25)
dataKeep2$Location <- as.integer(as.factor(dataKeep2$Location))
dataKeep2$Sector <- as.integer(as.factor(dataKeep2$Sector))
plotNormalHistogram(dataKeep2$Location)
dataLocation.plot <- sqrt(dataKeep2$Location)
plotNormalHistogram(dataLocation.plot)
plotNormalHistogram((dataKeep2$Sector))
str(dataKeep2$Location)
dataKeep2$Location <- as.factor(dataKeep2$Location)
str(dataKeep2$Location)
str(dataKeep2$Sector)
dataKeep2$Sector <- as.factor(dataKeep2$Sector)
str(dataKeep2$Sector)
str(dataKeep2$Python)
dataKeep2$Python <- as.factor(dataKeep2$Python)
str(dataKeep2$Python)
leveneTest(dataLocation.plot ~ Sector, data = dataKeep2)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp = lm(dataLocation.plot ~ Python, data = dataKeep2)
anova(Homogeneity_RegrSlp)
#RUNNING THE ANCOVA ANALYSIS
ANCOVA = lm(dataLocation.plot ~ Python + Sector*Python, data = dataKeep2)
anova(ANCOVA)
keepsP2 <- c("spark", "aws", "tensor","bi", "mongo", "google_an", "Location", "Sector")
dataKeep2 = Data.Fram.in.Excel.Data.Science.Salaries.2021[keepsP2]
dataKeepA <- head(dataKeep2, 25)
dataKeepA$Location <- as.integer(as.factor(dataKeepA$Location))
dataKeepA$Sector <- as.integer(as.factor(dataKeepA$Sector))
plotNormalHistogram(dataKeepA$Location)
dataLocation2.plot <- sqrt(dataKeepA$Location)
plotNormalHistogram(dataLocation2.plot)
plotNormalHistogram((dataKeepA$Sector))
str(dataKeepA$Location)
dataKeepA$Location <- as.factor(dataKeepA$Location)
str(dataKeepA$Location)
str(dataKeepA$Sector)
dataKeepA$Sector <- as.factor(dataKeepA$Sector)
str(dataKeepA$Sector)
str(dataKeepA$Python)
dataKeepA$Python <- as.factor(dataKeepA$Python)
str(dataKeepA$Python)
leveneTest(dataLocation2.plot ~ Sector, data = dataKeepA)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp1 = lm(dataLocation2.plot ~ spark, data = dataKeepA)
anova(Homogeneity_RegrSlp1)
#RUNNING THE ANCOVA ANALYSIS
ANCOVA = lm(dataLocation2.plot ~ aws + Sector*spark, data = dataKeepA)
anova(ANCOVA)
#Final Project Analysis- Data Scientist Salaries
install.packages("car")
install.packages("car")
install.packages("caret")
install.packages("caret")
#Loading Libraries
library("car")
library("caret")
library("gvlma")
library("predictmeans")
library("e1071")
library("lmtest")
View (Salaries)
colnames(Salaries)
df <- c("Avg.Salary.K.","Age")
Salaries1 <- Salaries[df]
View (Salaries1)
scatter.smooth(x=Salaries1$Avg.Salary.K., y=Salaries1$Age, main="Age of Company by Average Salary")
lmMod <- lm(Age~`Avg.Salary.K.` + Rating, data=Salaries)
#Creating a series of graphs to test for homoscedasticity.
par(mfrow=c(2,2))
plot(lmMod)
#Another Test for homoscedasticity with the Breush-Pagan test
lmtest::bptest(lmMod)
#As an alternative for testing homoscedasticity- The NCV Approach
car::ncvTest(lmMod)
#Using Box-Cox to transform the Dependent Variable (Correcting for Homoscedasticity)
BCMod1 <- caret::BoxCoxTrans(Salaries1$Avg.Salary.K.)
print(BCMod1)
#Binding the transformed DV to the sub-set data
Salaries2 <- cbind(Salaries1, newBCMod1=predict(BCMod1, Salaries1$Avg.Salary.K.))
View (Salaries2)
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Type.of.ownership"), vSize="Avg.Salary.K.", type="index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Lower.Salary", type = "index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Upper.Salary", type = "index")
library(dplyr)
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Information Technology'] <- "1"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Biotech & Pharmaceuticals'] <- "2"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Business Services']<- "3"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Insurance'] <- "4"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Health Care'] <- "5"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Finance'] <- "6"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Manufacturing'] <- "7"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Aerospace & Defense'] <- "8"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Education'] <- "9"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Retail'] <- "10"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Oil, Gas, Energy & Utilities'] <- "11"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Government'] <- "12"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='-1'] <- "13"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Non-Profit'] <- "14"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Transportation & Logistics'] <- "15"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Real Estate'] <- "16"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Travel & Tourism'] <- "17"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Telecommunications'] <- "18"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Media'] <- "19"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Arts, Entertainment & Recreation'] <- "20"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Consumer'] <- "21"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Mining & Metals'] <- "22"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Construction, Repair & Maintenance'] <- "23"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Agriculture & Forestry'] <- "24"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Accounting & Legal'] <- "25"
library("caret")
library("magrittr")
library("dplyr")
library("tidyr")
library("lmtest")
library("popbio")
library("e1071")
salarieslogit <- glm(as.factor(NewSector) ~ Python, data = Data.Fram.in.Excel.Data.Science.Salaries.2021, family = "binomial")
probabilities <- predict(salarieslogit, type = "response")
install.packages("qpcR")
install.packages("qpcR")
library("qpcR")
bindSalaries <- qpcR:::cbind.na(Data.Fram.in.Excel.Data.Science.Salaries.2021, probabilities)
bindSalaries
FitAll= lm(NewSector ~ Python + spark + aws + excel + sql + sas + keras + pytorch + scikit + tensor + hadoop + tableau + bi + flink + mongo + google_an, data = bindSalaries)
summary(FitAll)
step(FitAll, direction = 'backward')
fitSome = lm(NewSector ~ spark + aws + tensor + bi + mongo + google_an, data = bindSalaries)
summary(fitSome)
library('rcompanion')
library('car')
library('effects')
library('multcomp')
library('IDPmisc')
library('dplyr')
library('psych')
keeps <- c("Python", "spark", "aws", "sas", "keras", "scikit", "flink", "mongo", "excel", "sql", "pytorch", "tensor", "hadoop", "tableau", "bi", "google_an", "Location", "Sector")
dataKeep = Data.Fram.in.Excel.Data.Science.Salaries.2021[keeps]
dataKeep2 <- head(dataKeep, 25)
dataKeep2$Location <- as.integer(as.factor(dataKeep2$Location))
dataKeep2$Sector <- as.integer(as.factor(dataKeep2$Sector))
plotNormalHistogram(dataKeep2$Location)
dataLocation.plot <- sqrt(dataKeep2$Location)
plotNormalHistogram(dataLocation.plot)
plotNormalHistogram((dataKeep2$Sector))
str(dataKeep2$Location)
dataKeep2$Location <- as.factor(dataKeep2$Location)
str(dataKeep2$Location)
str(dataKeep2$Sector)
dataKeep2$Sector <- as.factor(dataKeep2$Sector)
str(dataKeep2$Sector)
str(dataKeep2$Python)
dataKeep2$Python <- as.factor(dataKeep2$Python)
str(dataKeep2$Python)
leveneTest(dataLocation.plot ~ Sector, data = dataKeep2)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp = lm(dataLocation.plot ~ Python, data = dataKeep2)
anova(Homogeneity_RegrSlp)
#RUNNING THE ANCOVA ANALYSIS
ANCOVA = lm(dataLocation.plot ~ Python + Sector*Python, data = dataKeep2)
anova(ANCOVA)
# RUNNING SECOND ANOVA
keepsP2 <- c("spark", "aws", "tensor","bi", "mongo", "google_an", "Location", "Sector")
dataKeep2 = Data.Fram.in.Excel.Data.Science.Salaries.2021[keepsP2]
dataKeepA <- head(dataKeep2, 25)
dataKeepA$Location <- as.integer(as.factor(dataKeepA$Location))
dataKeepA$Sector <- as.integer(as.factor(dataKeepA$Sector))
plotNormalHistogram(dataKeepA$Location)
dataLocation2.plot <- sqrt(dataKeepA$Location)
plotNormalHistogram(dataLocation2.plot)
plotNormalHistogram((dataKeepA$Sector))
str(dataKeepA$Location)
dataKeepA$Location <- as.factor(dataKeepA$Location)
str(dataKeepA$Location)
str(dataKeepA$Sector)
dataKeepA$Sector <- as.factor(dataKeepA$Sector)
str(dataKeepA$Sector)
str(dataKeepA$Python)
dataKeepA$Python <- as.factor(dataKeepA$Python)
str(dataKeepA$Python)
library(dplyr)
library(readxl)
library(ggplot2)
library(treemap)
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Type.of.ownership"), vSize="Avg.Salary.K.", type="index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Lower.Salary", type = "index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Upper.Salary", type = "index")
library(dplyr)
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Information Technology'] <- "1"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Biotech & Pharmaceuticals'] <- "2"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Business Services']<- "3"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Insurance'] <- "4"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Health Care'] <- "5"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Finance'] <- "6"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Manufacturing'] <- "7"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Aerospace & Defense'] <- "8"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Education'] <- "9"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Retail'] <- "10"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Oil, Gas, Energy & Utilities'] <- "11"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Government'] <- "12"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='-1'] <- "13"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Non-Profit'] <- "14"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Transportation & Logistics'] <- "15"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Real Estate'] <- "16"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Travel & Tourism'] <- "17"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Telecommunications'] <- "18"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Media'] <- "19"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Arts, Entertainment & Recreation'] <- "20"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Consumer'] <- "21"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Mining & Metals'] <- "22"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Construction, Repair & Maintenance'] <- "23"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Agriculture & Forestry'] <- "24"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Accounting & Legal'] <- "25"
library("caret")
library("magrittr")
library("dplyr")
library("tidyr")
library("lmtest")
library("popbio")
library("e1071")
salarieslogit <- glm(as.factor(NewSector) ~ Python, data = Data.Fram.in.Excel.Data.Science.Salaries.2021, family = "binomial")
probabilities <- predict(salarieslogit, type = "response")
library("qpcR")
bindSalaries <- qpcR:::cbind.na(Data.Fram.in.Excel.Data.Science.Salaries.2021, probabilities)
bindSalaries
FitAll= lm(NewSector ~ Python + spark + aws + excel + sql + sas + keras + pytorch + scikit + tensor + hadoop + tableau + bi + flink + mongo + google_an, data = bindSalaries)
summary(FitAll)
step(FitAll, direction = 'backward')
fitSome = lm(NewSector ~ spark + aws + tensor + bi + mongo + google_an, data = bindSalaries)
summary(fitSome)
library('rcompanion')
library('car')
library('effects')
library('multcomp')
library('IDPmisc')
library('dplyr')
library('psych')
keeps <- c("Python", "spark", "aws", "sas", "keras", "scikit", "flink", "mongo", "excel", "sql", "pytorch", "tensor", "hadoop", "tableau", "bi", "google_an", "Location", "Sector")
dataKeep = Data.Fram.in.Excel.Data.Science.Salaries.2021[keeps]
dataKeep2 <- head(dataKeep, 25)
dataKeep2$Location <- as.integer(as.factor(dataKeep2$Location))
dataKeep2$Sector <- as.integer(as.factor(dataKeep2$Sector))
plotNormalHistogram(dataKeep2$Location)
dataLocation.plot <- sqrt(dataKeep2$Location)
plotNormalHistogram(dataLocation.plot)
plotNormalHistogram((dataKeep2$Sector))
str(dataKeep2$Location)
dataKeep2$Location <- as.factor(dataKeep2$Location)
str(dataKeep2$Location)
str(dataKeep2$Sector)
dataKeep2$Sector <- as.factor(dataKeep2$Sector)
str(dataKeep2$Sector)
str(dataKeep2$Python)
dataKeep2$Python <- as.factor(dataKeep2$Python)
str(dataKeep2$Python)
leveneTest(dataLocation.plot ~ Sector, data = dataKeep2)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp = lm(dataLocation.plot ~ Python, data = dataKeep2)
anova(Homogeneity_RegrSlp)
#RUNNING THE ANCOVA ANALYSIS
ANCOVA = lm(dataLocation.plot ~ Python + Sector*Python, data = dataKeep2)
anova(ANCOVA)
keepsP2 <- c("spark", "aws", "tensor","bi", "mongo", "google_an", "Location", "Sector")
dataKeep2 = Data.Fram.in.Excel.Data.Science.Salaries.2021[keepsP2]
dataKeepA <- head(dataKeep2, 25)
dataKeepA$Location <- as.integer(as.factor(dataKeepA$Location))
dataKeepA$Sector <- as.integer(as.factor(dataKeepA$Sector))
plotNormalHistogram(dataKeepA$Location)
dataLocation2.plot <- sqrt(dataKeepA$Location)
plotNormalHistogram(dataLocation2.plot)
plotNormalHistogram((dataKeepA$Sector))
str(dataKeepA$Location)
dataKeepA$Location <- as.factor(dataKeepA$Location)
str(dataKeepA$Location)
str(dataKeepA$Sector)
dataKeepA$Sector <- as.factor(dataKeepA$Sector)
str(dataKeepA$Sector)
str(dataKeepA$Python)
dataKeepA$Python <- as.factor(dataKeepA$Python)
str(dataKeepA$spark)
dataKeepA$Python <- as.factor(dataKeepA$spark)
str(dataKeepA$Python)
leveneTest(dataLocation2.plot ~ Sector, data = dataKeepA)
##Test for Homogeneity of Regression Slopes
Homogeneity_RegrSlp1 = lm(dataLocation2.plot ~ spark, data = dataKeepA)
anova(Homogeneity_RegrSlp1)
#RUNNING THE ANCOVA ANALYSIS
ANCOVA = lm(dataLocation2.plot ~ aws + Sector*spark, data = dataKeepA)
anova(ANCOVA)
#Final Project Analysis- Data Scientist Salaries
install.packages("car")
install.packages("car")
library('rcompanion')
library('car')
library('effects')
library('multcomp')
library('IDPmisc')
library('dplyr')
library('psych')
Salaries <- read.csv('C:/Users/sever/Desktop/JennsSchool/FinalProject/Datasets/data_cleaned_2021.csv')
