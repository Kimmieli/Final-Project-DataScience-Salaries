library(dplyr)
library(readxl)
library(ggplot2)
install.packages('treemap')
library(treemap)
Salary2 = subset(Data.Science.Salaries._cleaned.2021, select = -c(1:23, 40:42))
salary3 <- as.matrix(Salary2)
Data.Fram.in.Excel.Data.Science.Salaries.2021 <- read.csv("~/GitHub/Final-Project-DataScience-Salaries/Data Fram in Excel Data Science Salaries 2021.csv", comment.char="#")
View(Data.Fram.in.Excel.Data.Science.Salaries.2021)
View(Data.Fram.in.Excel.Data.Science.Salaries.2021)
View(Data.Fram.in.Excel.Data.Science.Salaries.2021)
Salary2 = subset(Data.Fram.in.Excel.Data.Science.Salaries.2021, select = -c(1:23, 40:42))
salary3 <- as.matrix(Salary2)
heatmap(salary3)
View(Data.Fram.in.Excel.Data.Science.Salaries.2021)
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Type.of.ownership"), vSize="Avg.Salary.K.", type="index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Lower.Salary", type = "index")
treemap(Data.Fram.in.Excel.Data.Science.Salaries.2021, index=c("Sector"), vSize = "Upper.Salary", type = "index")
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Information Technology'] <- "1"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Biotech & Pharmaceuticals'] <- "2"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Business Services']<- "3"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.20211$Sector=='Insurance'] <- "4"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Health Care'] <- "5"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Finance'] <- "6"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Manufacturing'] <- "7"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Aerospace & Defense'] <- "8"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Education'] <- "9"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Retail'] <- "10"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Oil, Gas, Energy & Utilities'] <- "11"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Government'] <- "12"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='-1'] <- "13"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Non-Profit'] <- "14"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Transportation & Logistics'] <- "15"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Real Estate'] <- "16"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Travel & Tourism'] <- "17"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Telecommunications'] <- "18"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Media'] <- "19"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Arts, Entertainment & Recreation'] <- "20"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Consumer'] <- "21"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Mining & Metals'] <- "22"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Construction, Repair & Maintenance'] <- "23"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Agriculture & Forestry'] <- "24"
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Accounting & Legal'] <- "25"
library("caret")
library("magrittr")
library("dplyr")
library("tidyr")
library("lmtest")
library("popbio")
library("e1071")
salarieslogit <- glm(NewSector ~ Python, data = Data.Science.Salaries._cleaned.2021, family = "binomial")
salarieslogit <- glm(NewSector ~ Python, data = Data.Fram.in.Excel.Data.Science.Salaries.2021, family = "binomial")
install.packages("qpcR")
library("qpcR")
salarieslogit <- glm(NewSector ~ Python, data = Data.Fram.in.Excel.Data.Science.Salaries.2021, family = "binomial")
Data.Fram.in.Excel.Data.Science.Salaries.2021$NewSector[Data.Fram.in.Excel.Data.Science.Salaries.2021$Sector=='Insurance'] <- "4"
salarieslogit <- glm(NewSector ~ Python, data = Data.Fram.in.Excel.Data.Science.Salaries.2021, family = "binomial")
salarieslogit <- glm(as.factor(NewSector) ~ Python, data = Data.Fram.in.Excel.Data.Science.Salaries.2021, family = "binomial")
probabilities <- predict(salarieslogit, type = "response")
install.packages("qpcR")
install.packages("qpcR")
bindSalaries <- qpcR:::cbind.na(Data.Fram.in.Excel.Data.Science.Salaries.2021, probabilities)
bindSalaries
View(bindSalaries)
newBindSalaries <- na.omit(bindSalaries)
newBindSalaries$Predicted <- ifelse(probabilities > .5, "yes", "no")
FitAll= lm(NewSector ~ Python + spark + aws + excel + sql + sas + keras + pytorch + scikit + tensor + hadoop + tableau + bi + flink + mongo + google_an, data = bindSalaries)
summary(FitAll)
step(FitAll, direction = 'backward')
fitSome = lm(NewSector ~ spark + aws + tensor + bi + mongo + google_an, data = bindSalaries)
summary(fitSome)
View(FitAll)
View(fitSome)
View(fitSome)
View(bindSalaries)
FitAll= lm(NewSector ~ Python + spark + aws + excel + sql + sas + keras + pytorch + scikit + tensor + hadoop + tableau + bi + flink + mongo + google_an, data = bindSalaries)
